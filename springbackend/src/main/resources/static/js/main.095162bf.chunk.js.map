{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","theList","setTheList","useEffect","a","fetch","json","fetchData","className","scope","map","empno","name","job","dept","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAoCeA,MAlCf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KASA,OARAC,qBAAU,YACO,uCAAG,sBAAAC,EAAA,kEAChBF,EADgB,SAEDG,MAAM,uBAFL,8BAE6BC,OAF7B,uGAAH,qDAKfC,KACC,IAED,mCACE,wBAAOC,UAAU,QAAjB,UACE,kCACE,oBAAIC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,qBAEF,gCACGR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,IAAKC,EAArB,EAAqBA,KAArB,OACX,+BACE,oBAAIL,MAAM,MAAV,SAAiBE,IACjB,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,kBCfJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.095162bf.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useEffect, useState } from \"react\";\nfunction App() {\n  const [theList, setTheList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () =>\n      setTheList(\n        await (await fetch(\"/getRequiredDetails\")).json()\n      );\n\n    fetchData();\n  }, []);\n  return (\n    <>\n      <table className=\"table\">\n        <thead>\n          <th scope=\"col\">empno</th>\n          <th scope=\"col\">name</th>\n          <th scope=\"col\">job</th>\n          <th scope=\"col\">dept</th>\n        </thead>\n        <tbody>\n          {theList.map(({ empno, name, job, dept }) => (\n            <tr>\n              <th scope=\"row\">{empno}</th>\n              <td>{name}</td>\n              <td>{job}</td>\n              <td>{dept}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}